generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model College {
  id           String   @id @default(uuid())
  name         String
  email_domain String   @unique
  country      String   @default("")
  state        String   @default("")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt // âœ… auto-updated on changes

  // ðŸ‘‡ Relation: one college has many users
  users User[]
}

model User {
  id         String @id @default(uuid())
  full_name  String
  username   String @unique
  avatar_url String
  email      String @unique
  gender     Gender
  age        Int
  country    String @default("")

  college_id String
  college    College @relation(fields: [college_id], references: [id])

  bio  String?
  tags String[]

  socials UserSocials?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model UserSocials {
  id        String   @id @default(uuid())
  linked_in String?
  twitter   String?
  instagram String?
  user_id   String   @unique
  user      User     @relation(fields: [user_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum Gender {
  MALE
  FEMALE
  OTHER
  PREFER_NOT_TO_SAY
}

enum WaitlistStatus {
  PENDING
  APPROVED
  REJECTED
}

model CollegeWaitlist {
  id             String         @id @default(uuid())
  requester_name String
  college_name   String
  email_domain   String         @unique
  status         WaitlistStatus @default(PENDING)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now()) @updatedAt
}
